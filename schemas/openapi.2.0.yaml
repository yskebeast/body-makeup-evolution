openapi: 3.0.0
info:
  title: Pet Store
  version: "2.0"
tags:
  - name: pets
    description: Pet operations
  - name: petsToys
    description: Pet toy operations
paths:
  /pets:
    get:
      tags:
        - pets
      operationId: Pets_listPets
      parameters:
        - $ref: "#/components/parameters/CommonParameters.requestID"
        - $ref: "#/components/parameters/CommonParameters.locale"
        - $ref: "#/components/parameters/CommonParameters.clientVersion"
      responses:
        "200":
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Pet"
    post:
      tags:
        - pets
      operationId: Pets_createPet
      parameters:
        - $ref: "#/components/parameters/CommonParameters.requestID"
        - $ref: "#/components/parameters/CommonParameters.locale"
        - $ref: "#/components/parameters/CommonParameters.clientVersion"
      responses:
        "201":
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        "202":
          description: The request has been accepted for processing, but processing has not yet completed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "401":
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pet"
      security:
        - BearerAuth: []
  /pets/{petId}:
    get:
      tags:
        - pets
      operationId: Pets_getPet
      parameters:
        - name: petId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - $ref: "#/components/parameters/CommonParameters.requestID"
        - $ref: "#/components/parameters/CommonParameters.locale"
        - $ref: "#/components/parameters/CommonParameters.clientVersion"
      responses:
        "200":
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        "404":
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
    put:
      tags:
        - pets
      operationId: Pets_updatePet
      parameters:
        - name: petId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - $ref: "#/components/parameters/CommonParameters.requestID"
        - $ref: "#/components/parameters/CommonParameters.locale"
        - $ref: "#/components/parameters/CommonParameters.clientVersion"
      responses:
        "200":
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "401":
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        "404":
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InternalServerError"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Pet"
      security:
        - BearerAuth: []
    delete:
      tags:
        - pets
      operationId: Pets_deletePet
      parameters:
        - name: petId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - $ref: "#/components/parameters/CommonParameters.requestID"
        - $ref: "#/components/parameters/CommonParameters.locale"
        - $ref: "#/components/parameters/CommonParameters.clientVersion"
      responses:
        "204":
          description: "There is no content to send for this request, but the headers may be useful. "
        "401":
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
      security:
        - BearerAuth: []
  /pets/{petId}/toys:
    get:
      tags:
        - petsToys
      operationId: Toys_listToys
      parameters:
        - name: petId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - $ref: "#/components/parameters/CommonParameters.requestID"
        - $ref: "#/components/parameters/CommonParameters.locale"
        - $ref: "#/components/parameters/CommonParameters.clientVersion"
      responses:
        "200":
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Toy"
        "404":
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
    post:
      tags:
        - petsToys
      operationId: Toys_createToy
      parameters:
        - name: petId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - $ref: "#/components/parameters/CommonParameters.requestID"
        - $ref: "#/components/parameters/CommonParameters.locale"
        - $ref: "#/components/parameters/CommonParameters.clientVersion"
      responses:
        "201":
          description: The request has succeeded and a new resource has been created as a result.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Toy"
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "401":
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Toy"
      security:
        - BearerAuth: []
  /pets/{petId}/toys/{toyId}:
    put:
      tags:
        - petsToys
      operationId: Toys_updateToy
      parameters:
        - name: petId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: toyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - $ref: "#/components/parameters/CommonParameters.requestID"
        - $ref: "#/components/parameters/CommonParameters.locale"
        - $ref: "#/components/parameters/CommonParameters.clientVersion"
      responses:
        "200":
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Toy"
        "400":
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
        "401":
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
        "404":
          description: The server cannot find the requested resource.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotFoundError"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Toy"
      security:
        - BearerAuth: []
    delete:
      tags:
        - petsToys
      operationId: Toys_deleteToy
      parameters:
        - name: petId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: toyId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - $ref: "#/components/parameters/CommonParameters.requestID"
        - $ref: "#/components/parameters/CommonParameters.locale"
        - $ref: "#/components/parameters/CommonParameters.clientVersion"
      responses:
        "204":
          description: "There is no content to send for this request, but the headers may be useful. "
        "401":
          description: Access is unauthorized.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UnauthorizedError"
      security:
        - BearerAuth: []
components:
  parameters:
    CommonParameters.clientVersion:
      name: client-version
      in: header
      required: false
      schema:
        type: string
    CommonParameters.locale:
      name: locale
      in: query
      required: false
      schema:
        type: string
      explode: false
    CommonParameters.requestID:
      name: request-id
      in: header
      required: true
      schema:
        type: string
  schemas:
    InternalServerError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          enum:
            - INTERNAL_SERVER_ERROR
        message:
          type: string
    InternalServerErrorResponse:
      type: object
      required:
        - error
      properties:
        error:
          $ref: "#/components/schemas/InternalServerError"
    NotFoundError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          enum:
            - NOT_FOUND
        message:
          type: string
    Pet:
      type: object
      required:
        - id
        - name
        - age
        - kind
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          minLength: 1
        age:
          type: integer
          format: int32
          minimum: 0
          maximum: 100
        kind:
          $ref: "#/components/schemas/petType"
    Toy:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    UnauthorizedError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          enum:
            - UNAUTHORIZED
        message:
          type: string
    ValidationError:
      type: object
      required:
        - code
        - message
        - details
      properties:
        code:
          type: string
          enum:
            - VALIDATION_ERROR
        message:
          type: string
        details:
          type: array
          items:
            type: string
    Versions:
      type: string
      enum:
        - "1.0"
        - "2.0"
    petType:
      type: string
      enum:
        - dog
        - cat
        - fish
        - bird
        - reptile
  securitySchemes:
    BearerAuth:
      type: http
      scheme: Bearer
servers:
  - url: https://example.com
    description: Single server endpoint
    variables: {}
